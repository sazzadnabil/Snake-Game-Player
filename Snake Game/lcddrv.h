/* 定义颜色数据类型(可以是数据结构) */
#define  TCOLOR uint8 

#define LCD_DISP_COLOR 1                        //marco定义LCD的前景色和背景色
#define LCD_BACK_COLOR 0

/* 定义LCM像素数宏 */
#define  GUI_LCM_XMAX		256 //240							/* 定义液晶x轴的像素数 */
#define  GUI_LCM_YMAX		64   //128							/* 定义液晶y轴的像素数 */


/*********************************************************************************************************
** 函数名称: GUI_Initialize
** 功能描述: 初始化GUI，包括初始化显示缓冲区，初始化LCM并清屏
** 输　入: 无 
** 输　出: 无       
** 全局变量: 无
** 调用模块: 无
** Modified by:
** Modified date:
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
extern void  GUI_Initialize(void);

/*********************************************************************************************************
** 函数名称: GUI_FillSCR()
** 功能描述: 全屏填充。直接使用数据填充显示缓冲区。根据LCM的实际情况编写此函数
** 输　入: dat		填充的数据
** 输　出: 无       
** 全局变量: 无
** 调用模块: 无
** Modified by:
** Modified date:
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
extern void  GUI_FillSCR(TCOLOR dat);


/*********************************************************************************************************
** 函数名称: GUI_ClearSCR()
** 功能描述: 清屏
** 输　入: 无
** 输　出: 无       
** 全局变量: 无
** 调用模块: 无
** Modified by:
** Modified date:
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
//extern void  GUI_ClearSCR(void);
#define  GUI_ClearSCR()		GUI_FillSCR(0x00)


/*********************************************************************************************************
** 函数名称: GUI_Point
** 功能描述: 在指定位置上画点
** 输　入: x指定点所在列的位置；y指定点所在行的位置；color显示颜色(对于黑白色LCM，为0时灭，为1时显示)
** 输　出: 返回值为1时表示操作成功，为0时表示操作失败       
** 全局变量: 无
** 调用模块: 无

** Modified by:
** Modified date:
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
extern uint8  GUI_Point(uint8 x, uint8 y, TCOLOR color);


/*********************************************************************************************************
** 函数名称: GUI_ReadPoint
** 功能描述: 读取指定点的颜色。对于单色，设置ret的d0位为1或0，4级灰度则为d0、d1有效，8位RGB则d0--d7有效，RGB结构则R、G、B变量有效
** 输　入: x指定点所在列的位置； y指定点所在行的位置；ret保存颜色值的指针
** 输　出: 返回0表示指定地址超出缓冲区范围       
** 全局变量: 无
** 调用模块: 无
** Modified by:
** Modified date:
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
extern uint8  GUI_ReadPoint(uint8 x, uint8 y, TCOLOR *ret);

/*********************************************************************************************************
** 函数名称: GUI_HLine
** 功能描述: 画水平线，操作失败原因是指定地址超出缓冲区范围
** 输　入:  x0    水平线起点所在列的位置
*           y0    水平线起点所在行的位置
*           x1    水平线终点所在列的位置
*           color 显示颜色(对于黑白色LCM，为0时灭，为1时显示)
** 输　出: 无       
** 全局变量: 无
** 调用模块: 无
** Modified by:
** Modified date:
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
extern void  GUI_HLine(uint8 x0, uint8 y0, uint8 x1, TCOLOR color);

/*********************************************************************************************************
** 函数名称: GUI_RLine
** 功能描述: 画竖直线。
** 输　入:  x0    水平线起点所在列的位置
*           y0    水平线起点所在行的位置
*           x1    水平线终点所在列的位置
*           color 显示颜色(对于黑白色LCM，为0时灭，为1时显示)
** 输　出: 无       
** 全局变量: 无
** 调用模块: 无
** Modified by:
** Modified date:
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
extern void  GUI_RLine(uint8 x0, uint8 y0, uint8 y1, TCOLOR color);

/*********************************************************************************************************
** 函数名称: GUI_CmpColor()
** 功能描述: 判断颜色值是否一致。
** 输　入:  color1		颜色值1
*	    color2		颜色值2
*           color 显示颜色(对于黑白色LCM，为0时灭，为1时显示)
** 输　出: 返回1表示相同，返回0表示不相同。      
** 全局变量: 无
** 调用模块: 无
** Modified by:
** Modified date:
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
//extern int  GUI_CmpColor(TCOLOR color1, TCOLOR color2);
#define  GUI_CmpColor(color1, color2)	( (color1&0x01) == (color2&0x01) )


//颜色值复制   color1：目标颜色变量   color2：源颜色变量   color 显示颜色(对于黑白色LCM，为0时灭，为1时显示)
#define  GUI_CopyColor(color1, color2) 	*color1 = color2&0x01
